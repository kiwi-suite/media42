angular.module("media42",["angularFileUpload"]),angular.module("media42").directive("formMedia",[function(){return{restrict:"E",templateUrl:function(elem,attrs){return attrs.template},scope:{elementDataId:"@"},controller:["$scope","jsonCache","$formService","$uibModal",function($scope,jsonCache,$formService,$uibModal){$scope.formData=jsonCache.get($scope.elementDataId),$scope.onChange=function(){$scope.formData.errors=[]},$scope.empty=function(){$scope.formData.value="",$scope.onChange()},$scope.selectMedia=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:"element/form/media-modal.html",controller:["$scope","$uibModalInstance","formData",function($scope,$uibModalInstance,formData){$scope.selectedMedia=null,$scope.mediaUrl=formData.mediaUrl,$scope.selectMedia=function(media){return null!==$scope.selectedMedia&&$scope.selectedMedia.id==media.id?void($scope.selectedMedia=null):void($scope.selectedMedia=media)},$scope.ok=function(){$uibModalInstance.close($scope.selectedMedia)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}],size:"lg",resolve:{formData:function(){return $scope.formData}}});modalInstance.result.then(function(media){null!==media&&($scope.media=media)},function(){})},angular.isDefined($scope.formData.options.formServiceHash)&&$formService.put($scope.formData.options.formServiceHash,$scope.formData.name,$scope.elementDataId)}]}}]),angular.module("media42").controller("CropController",["$scope","$http","$timeout","Cropper","jsonCache","$attrs","$interval",function($scope,$http,$timeout,Cropper,jsonCache,$attrs,$interval){function setCurrentInfo(currentInfo){var dimension=$scope.dimensions[$scope.selectedHandle];if("auto"!=dimension.width&&"auto"!=dimension.height)currentInfo.calcWidth=dimension.width,currentInfo.calcHeight=dimension.height;else if("auto"==dimension.width&&"auto"==dimension.height)currentInfo.calcWidth=currentInfo.width,currentInfo.calcHeight=currentInfo.height;else if("auto"==dimension.width&&"auto"!=dimension.height){var ratio=currentInfo.height/dimension.height;currentInfo.calcWidth=Math.round(currentInfo.width/ratio),currentInfo.calcHeight=dimension.height}else{var ratio=currentInfo.width/dimension.width;currentInfo.calcWidth=dimension.width,currentInfo.calcHeight=Math.round(currentInfo.height/ratio)}$scope.currentInfo=currentInfo,$scope.$apply()}function stopInterval(){$interval.cancel(stop)}$scope.data=[],$scope.dimensions=jsonCache.get($attrs.json).dimension,$scope.meta=jsonCache.get($attrs.json).meta,$scope.selectedHandle=null;var imageSize=jsonCache.get($attrs.json).imageSize;$scope.hasChanges={},$scope.currentInfo={x:0,y:0,width:0,height:0,rotate:0,calcWidth:0,calcHeight:0},$scope.isActive=function(handle){return handle==$scope.selectedHandle?"active":""},$scope.checkChanges=function(handle){return angular.isUndefined($scope.data[handle])?!1:angular.isUndefined($scope.meta[handle])?!0:$scope.data[handle].x==$scope.meta[handle].x&&$scope.data[handle].y==$scope.meta[handle].y&&$scope.data[handle].width==$scope.meta[handle].width&&$scope.data[handle].height==$scope.meta[handle].height?!1:!0},$scope.checkImageSize=function(currentDimension){return imageSize.width<currentDimension.width||imageSize.height<currentDimension.height?!1:!0},angular.forEach($scope.dimensions,function(value,key){null===this.selectedHandle&&this.checkImageSize(value)&&(this.selectedHandle=key)},$scope),$scope.saveCroppedImage=function(handle,url){return angular.isUndefined($scope.data[handle])?!1:(url=url.replace("{{ name }}",handle),void $http.post(url,$scope.data[handle]))},$scope.selectDimension=function(handle){$scope.currentInfo={x:0,y:0,width:0,height:0,rotate:0,calcWidth:0,calcHeight:0};var dimension=$scope.dimensions[handle];Cropper.getJqueryCrop().cropper("destroy"),$scope.selectedHandle=handle;var options={crop:function(dataNew){console.log(dataNew),$scope.data[$scope.selectedHandle]={x:dataNew.x,y:dataNew.y,width:dataNew.width,height:dataNew.height}},viewMode:1,strict:!0,zoomable:!1,responsive:!0,rotatable:!1,guides:!0};angular.isUndefined($scope.data[handle])?angular.isUndefined($scope.meta[handle])?(options.data={width:dimension.width,height:dimension.height,rotate:0},options.built=function(e){var data=$(this).cropper("getData"),imageData=$(this).cropper("getImageData"),x=(imageData.naturalWidth-data.width)/2,y=(imageData.naturalHeight-data.height)/2;$(this).cropper("setData",{x:x,y:y})}):options.data={x:$scope.meta[handle].x,y:$scope.meta[handle].y,width:$scope.meta[handle].width,height:$scope.meta[handle].height,rotate:0}:options.data=$scope.data[handle],"auto"!=dimension.width&&"auto"!=dimension.height&&(options.aspectRatio=dimension.width/dimension.height),Cropper.getJqueryCrop().off("cropmove.cropper"),Cropper.getJqueryCrop().off("cropstart.cropper"),Cropper.getJqueryCrop().cropper(options),Cropper.getJqueryCrop().on("cropmove.cropper",function(e){var $cropper=$(e.target),data=$cropper.cropper("getCropBoxData"),imageData=$cropper.cropper("getImageData");return setCurrentInfo($cropper.cropper("getData",!0)),"auto"!=dimension.width&&data.width<dimension.width/(imageData.naturalWidth/imageData.width)?!1:"auto"!=dimension.height&&data.height<dimension.height/(imageData.naturalHeight/imageData.height)?!1:!0}).on("cropstart.cropper",function(e){var $cropper=$(e.target),data=$cropper.cropper("getCropBoxData"),imageData=$cropper.cropper("getImageData"),hasChanged=!1;if(setCurrentInfo($cropper.cropper("getData",!0)),"auto"!=dimension.width){var width=dimension.width/(imageData.naturalWidth/imageData.width);(angular.isUndefined(data.width)||data.width<width)&&(data.width=width,hasChanged=!0)}if("auto"!=dimension.height){var height=dimension.height/(imageData.naturalHeight/imageData.height);(angular.isUndefined(data.height)||data.height<height)&&(data.height=height,hasChanged=!0)}$scope.hasChanges[handle]=!0,$scope.$apply(),hasChanged&&$(e.target).cropper("setCropBoxData",data)}).on("built.cropper",function(e){var $cropper=$(e.target);setCurrentInfo($cropper.cropper("getData",!0))})};var stop=$interval(function(){null!=Cropper.getJqueryCrop()&&null!=$scope.selectedHandle&&($scope.selectDimension($scope.selectedHandle),stopInterval())},100)}]),angular.module("media42").directive("ngCropper",["Cropper",function(Cropper){return{restrict:"A",link:function(scope,element,atts){Cropper.setJqueryCrop(element)}}}]).service("Cropper",[function(){this.crop=null,this.setJqueryCrop=function(crop){this.crop=crop},this.getJqueryCrop=function(){return this.crop}}]),angular.module("media42").controller("FileSelectorController",["$scope","$attrs","jsonCache","$uibModal","MediaService",function($scope,$attrs,jsonCache,$uibModal,MediaService){$scope.media=jsonCache.get($attrs.jsonDataId),$scope.tabs={media:{active:"file"!==$attrs.ngType,disabled:!1},sitemap:{active:"file"===$attrs.ngType,disabled:"file"!==$attrs.ngType}},$scope.clearMedia=function(){$scope.media=[]},$scope.isImage=function(){return angular.isUndefined($scope.media.mimeType)?!1:"image/"==$scope.media.mimeType.substr(0,6)},$scope.getSrc=function(media,dimension){return MediaService.getMediaUrl(media.directory,media.filename,media.mimeType,dimension)},$scope.selectMedia=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:$attrs.modalTemplate,controller:"MediaModalSelectorController",size:"lg"});modalInstance.result.then(function(media){null!==media&&($scope.media=media)},function(){})}}]),angular.module("media42").controller("MediaModalSelectorController",["$scope","$uibModalInstance",function($scope,$uibModalInstance){var selectedMedia=null;$scope.selectMedia=function(media){return $scope.selectedMedia==media.id?($scope.selectedMedia=null,void(selectedMedia=null)):($scope.selectedMedia=media.id,void(selectedMedia=media))},$scope.ok=function(){$uibModalInstance.close(selectedMedia)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("media42").controller("MediaController",["$scope","FileUploader","$attrs","$http","$sessionStorage","$templateCache","MediaService","$uibModal",function($scope,FileUploader,$attrs,$http,$sessionStorage,$templateCache,MediaService,$uibModal){function requestFromServer(url,tableState){$scope.collection=[],$scope.isLoading=!0,isInitialCall=!1,$http.post(url,tableState).success(function(data,status,headers,config){$scope.isLoading=!1,$scope.collection=data.data,$scope.displayedPages=data.meta.displayedPages,tableState.pagination.numberOfPages=data.meta.displayedPages}).error(function(data,status,headers,config){})}$templateCache.put("template/smart-table/pagination.html",'<nav ng-if="numPages && pages.length >= 2"><ul class="pagination"><li ng-if="currentPage > 1"><a ng-click="selectPage(1)"><i class="fa fa-angle-double-left"></i></a></li><li ng-if="currentPage > 1"><a ng-click="selectPage(currentPage - 1)"><i class="fa fa-angle-left"></i></a></li><li ng-repeat="page in pages" ng-class="{active: page==currentPage}"><a ng-click="selectPage(page)">{{page}}</a></li><li ng-if="currentPage < numPages"><a ng-click="selectPage(currentPage + 1)"><i class="fa fa-angle-right"></i></a></li><li ng-if="currentPage < numPages"><a ng-click="selectPage(numPages)"><i class="fa fa-angle-double-right"></i></a></li></ul></nav>');var currentTableState={},url=$attrs.url,persistNamespace=null,isInitialCall=!0;$scope.isCollapsed=!0,$scope.collection=[],$scope.isLoading=!0,$scope.displayedPages=1,$scope.errorFiles=[],$scope.category=$attrs.category,angular.isDefined($attrs.persist)&&$attrs.persist.length>0&&(persistNamespace=$attrs.persist);var uploader=$scope.uploader=new FileUploader({url:$attrs.uploadUrl,filters:[{name:"filesize",fn:function(item){return item.size>$attrs.maxFileSize?($scope.errorFiles.push(item),!1):!0}}]});$scope["delete"]=function(deleteUrl,id,modalTitle,modalContent){$scope.deleteLoading=!0;var modalInstance=$uibModal.open({animation:!0,templateUrl:"element/delete-modal.html",controller:"DeleteModalController",resolve:{requestUrl:function(){return deleteUrl},requestParams:function(){return{id:id}},requestTitle:function(){return modalTitle},requestContent:function(){return modalContent},requestMethod:function(){return"delete"},requestIcon:function(){return"fa fa-trash-o"}}});modalInstance.result.then(function(data){requestFromServer(url,currentTableState),$scope.deleteLoading=!1},function(){$scope.deleteLoading=!1})},$scope.uploadCategoryChange=function(){$("#categorySearchSelect").val($scope.category),angular.element($("#categorySearchSelect")[0]).triggerHandler("input")},uploader.onBeforeUploadItem=function(item){item.formData=[{category:$scope.category}]},uploader.onCompleteAll=function(){requestFromServer(url,currentTableState),$scope.errorFiles=[]},$scope.isImage=function(item){return"image/"==item.mimeType.substr(0,6)},$scope.getDocumentClass=function(item){return"fa-file"},$scope.callServer=function(tableState){currentTableState=tableState,isInitialCall===!0&&null!==persistNamespace?angular.isDefined($sessionStorage.smartTable)&&angular.isDefined($sessionStorage.smartTable[persistNamespace])&&angular.extend(tableState,angular.fromJson($sessionStorage.smartTable[persistNamespace])):null!==persistNamespace&&(angular.isUndefined($sessionStorage.smartTable)&&($sessionStorage.smartTable={}),$sessionStorage.smartTable[persistNamespace]=angular.toJson(tableState)),requestFromServer(url,tableState)},$scope.getSrc=function(media,dimension){return MediaService.getMediaUrl(media.directory,media.filename,media.mimeType,dimension)}}]),angular.module("media42").controller("ReplaceUploaderController",["$scope","FileUploader","$attrs","$window",function($scope,FileUploader,$attrs,$window){$scope.errorFiles=[],$scope.uploader=new FileUploader({url:$attrs.uploadUrl,autoUpload:!0,queueLimit:1,removeAfterUpload:!0,filters:[{name:"filesize",fn:function(item){return item.size>$attrs.maxFileSize?($scope.errorFiles.push(item),!1):!0}}]}),$scope.uploader.onSuccessItem=function(){$window.location.reload()}}]),angular.module("media42").service("MediaService",["jsonCache",function(jsonCache){this.getMediaUrl=function(directory,filename,mimeType,dimension){if(angular.isUndefined(directory)||angular.isUndefined(filename))return"";var mediaConfig=jsonCache.get("mediaConfig");if(directory=directory.replace("data/media",""),"image/"!=mimeType.substr(0,6)||null==dimension)return mediaConfig.baseUrl+directory+filename;if(angular.isUndefined(mediaConfig.dimensions[dimension]))return mediaConfig.baseUrl+directory+filename;var currentDimension=mediaConfig.dimensions[dimension],extension=filename.split(".").pop();return filename=filename.substr(0,filename.length-extension.length-1),filename=filename+"-"+("auto"==currentDimension.width?"":currentDimension.width)+"x"+("auto"==currentDimension.height?"":currentDimension.height)+"."+extension,mediaConfig.baseUrl+directory+filename}}]);